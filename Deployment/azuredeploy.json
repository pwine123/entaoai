{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "prefix": {
      "type": "string",
      "minLength": 1
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Specifies the Azure location where the app configuration store should be created."
      },
      "defaultValue": "East US",
      "allowedValues": ["East US", "UK South", "France Central"]
    },
    "embeddingModelName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "embedding"
    },
    "embeddingModelVectorDimensions": {
      "type": "int",
      "defaultValue": 1536
    },
    "embeddingModelVersion": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "2"
    },
    "gptModelName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "chat"
    },
    "gptModelVersion": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "0613"
    },
    "gpt16kModelName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "chat16k"
    },
    "deploymentCapacity": {
      "type": "int",
      "defaultValue": 20
    },
    "openAiApiVersion": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "2023-07-01-preview"
    },
    "searchServiceSku": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "standard",
      "allowedValues": ["basic", "standard", "standard2", "standard3"]
    },
    "adminPassword": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "P2ssw0rd1$"
    },
    "uploadPassword": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "P2ssw0rd1$"
    }
  },
  "variables": {
    "bingSvcName": "[concat(parameters('prefix'), take(uniqueString(resourceGroup().id), 5), 'bing')]",
    "frSvcName": "[concat(parameters('prefix'), take(uniqueString(resourceGroup().id), 5), 'fr')]",
    "speechSvcName": "[concat(parameters('prefix'), take(uniqueString(resourceGroup().id), 5), 'spch')]",
    "aoaiSvcName": "[concat(parameters('prefix'), take(uniqueString(resourceGroup().id), 5), 'aoai')]",
    "appInsightName": "[concat(parameters('prefix'), take(uniqueString(resourceGroup().id), 5), 'aisg')]",
    "searchSvcName": "[concat(parameters('prefix'), take(uniqueString(resourceGroup().id), 5), 'azs')]",
    "funcStorageName": "[concat(parameters('prefix'), take(uniqueString(resourceGroup().id), 5), 'fsa')]",
    "storageName": "[concat(parameters('prefix'), take(uniqueString(resourceGroup().id), 5), 'stor')]",
    "aspName": "[concat(parameters('prefix'), take(uniqueString(resourceGroup().id), 5), 'asp')]",
    "backendName": "[concat(parameters('prefix'), take(uniqueString(resourceGroup().id), 5), 'app')]",
    "funcAppName": "[concat(parameters('prefix'), take(uniqueString(resourceGroup().id), 5), 'func')]",
    "funcAppId": "[resourceId('Microsoft.Web/sites', variables('funcAppName'))]",
    "cosmosDbName": "[concat(parameters('prefix'), take(uniqueString(resourceGroup().id), 5), 'cacc')]",
    "cosmosDb": "aoai",
    "cosmosContainer": "chatgpt"
  },
  "resources": [
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2022-08-15",
      "name": "[variables('cosmosDbName')]",
      "location": "[parameters('location')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session"
        },
        "databaseAccountOfferType": "Standard",
        "enableFreeTier": false,
        "locations": [
          {
            "failoverPriority": 0,
            "isZoneRedundant": false,
            "locationName": "[parameters('location')]"
          }
        ]
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2022-08-15",
      "name": "[format('{0}/{1}', variables('cosmosDbName'), variables('cosmosDb'))]",
      "properties": {
        "resource": {
          "id": "[variables('cosmosDb')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2022-08-15",
      "name": "[format('{0}/{1}/{2}', variables('cosmosDbName'), variables('cosmosDb'), variables('cosmosContainer'))]",
      "properties": {
        "resource": {
          "id": "[variables('cosmosContainer')]",
          "partitionKey": {
            "paths": ["/sessionId"],
            "kind": "Hash",
            "version": 2
          },
          "indexingPolicy": {
            "indexingMode": "Consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/sessionId/?"
              },
              {
                "path": "/type/?"
              }
            ],
            "excludedPaths": [
              {
                "path": "/*"
              }
            ]
          }
        },
        "options": {
          "throughput": 400
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosDbName'), variables('cosmosDb'))]"
      ]
    },
    {
      "type": "Microsoft.Bing/accounts",
      "apiVersion": "2020-06-10",
      "name": "[variables('bingSvcName')]",
      "location": "global",
      "sku": {
        "name": "S1"
      },
      "kind": "Bing.Search.v7",
      "properties": {}
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2023-10-01-preview",
      "name": "[variables('frSvcName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "S0"
      },
      "kind": "FormRecognizer",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "apiProperties": {},
        "customSubDomainName": "[variables('frSvcName')]",
        "networkAcls": {
          "defaultAction": "Allow",
          "virtualNetworkRules": [],
          "ipRules": []
        },
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2022-12-01",
      "name": "[variables('aoaiSvcName')]",
      "location": "[parameters('location')]",
      "tags": {
        "azd-env-name": "aoaipdf"
      },
      "sku": {
        "name": "S0"
      },
      "kind": "OpenAI",
      "properties": {
        "customSubDomainName": "[variables('aoaiSvcName')]",
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2022-12-01",
      "name": "[variables('speechSvcName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "S0"
      },
      "kind": "SpeechServices",
      "identity": {
        "type": "None"
      },
      "properties": {
        "networkAcls": {
          "defaultAction": "Allow",
          "virtualNetworkRules": [],
          "ipRules": []
        },
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('appInsightName')]",
      "location": "[parameters('location')]",
      "tags": {
        "azd-env-name": "aoaipdf"
      },
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "RetentionInDays": 90,
        "IngestionMode": "ApplicationInsights",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "Microsoft.Search/searchServices",
      "apiVersion": "2022-09-01",
      "name": "[variables('searchSvcName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('searchServiceSku')]"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "replicaCount": 1,
        "partitionCount": 1,
        "semanticSearch": "free",
        "hostingMode": "default",
        "publicNetworkAccess": "Enabled",
        "networkRuleSet": {
          "ipRules": []
        },
        "encryptionWithCmk": {
          "enforcement": "Unspecified"
        },
        "disableLocalAuth": false,
        "authOptions": {
          "aadOrApiKey": {
            "aadAuthFailureMode": "http401WithBearerChallenge"
          }
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-09-01",
      "name": "[variables('funcStorageName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "Storage",
      "properties": {
        "minimumTlsVersion": "TLS1_0",
        "allowBlobPublicAccess": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-09-01",
      "name": "[variables('storageName')]",
      "location": "[parameters('location')]",
      "tags": {
        "azd-env-name": "aoaipdf"
      },
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "dnsEndpointType": "Standard",
        "defaultToOAuthAuthentication": false,
        "publicNetworkAccess": "Enabled",
        "allowCrossTenantReplication": true,
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false,
        "allowSharedKeyAccess": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-09-01",
      "name": "[variables('aspName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "B3"
      },
      "kind": "linux",
      "properties": {
        "perSiteScaling": false,
        "elasticScaleEnabled": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": true,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0,
        "zoneRedundant": false
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts/deployments",
      "apiVersion": "2023-05-01",
      "name": "[concat(variables('aoaiSvcName'), '/', parameters('gptModelName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('aoaiSvcName'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts/deployments', variables('aoaiSvcName'), parameters('embeddingModelName'))]"
      ],
      "sku": {
        "name": "Standard",
        "capacity": "[parameters('deploymentCapacity')]"
      },
      "properties": {
        "model": {
          "format": "OpenAI",
          "name": "gpt-35-turbo",
          "version": "[parameters('gptModelVersion')]"
        },
        "versionUpgradeOption": "OnceNewDefaultVersionAvailable",
        "raiPolicyName": "Microsoft.Default"
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts/deployments",
      "apiVersion": "2023-05-01",
      "name": "[concat(variables('aoaiSvcName'), '/', parameters('gpt16kModelName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('aoaiSvcName'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts/deployments', variables('aoaiSvcName'), parameters('gptModelName'))]"
      ],
      "sku": {
        "name": "Standard",
        "capacity": "[parameters('deploymentCapacity')]"
      },
      "properties": {
        "model": {
          "format": "OpenAI",
          "name": "gpt-35-turbo-16k",
          "version": "[parameters('gptModelVersion')]"
        },
        "versionUpgradeOption": "OnceNewDefaultVersionAvailable",
        "raiPolicyName": "Microsoft.Default"
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts/deployments",
      "apiVersion": "2023-05-01",
      "name": "[concat(variables('aoaiSvcName'), '/', parameters('embeddingModelName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('aoaiSvcName'))]"
      ],
      "sku": {
        "name": "Standard",
        "capacity": "[parameters('deploymentCapacity')]"
      },
      "properties": {
        "model": {
          "format": "OpenAI",
          "name": "text-embedding-ada-002",
          "version": "[parameters('embeddingModelVersion')]"
        },
        "versionUpgradeOption": "OnceNewDefaultVersionAvailable",
        "raiPolicyName": "Microsoft.Default"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2022-09-01",
      "name": "[concat(variables('storageName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "allowPermanentDelete": false,
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2022-09-01",
      "name": "[concat(variables('funcStorageName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('funcStorageName'))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "allowPermanentDelete": false,
          "enabled": true,
          "days": 2
        }
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-09-01",
      "name": "[variables('backendName')]",
      "location": "[parameters('location')]",
      "kind": "app,linux,container",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('aspName'))]",
        "[resourceId('Microsoft.Web/sites', variables('funcAppName'))]"
      ],
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('backendName'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(variables('backendName'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('aspName'))]",
        "reserved": true,
        "httpsOnly": true,
        "siteConfig": {
          "linuxFxVersion": "DOCKER|ghcr.io/akshata29/entaoai-app:latest",
          "linuxFxVersion": "python|3.9",
          "alwaysOn": true,
          "functionAppScaleLimit": 0,
          "minimumElasticInstanceCount": 0,
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightName')), '2020-02-02').InstrumentationKey]"
            },
            {
              "name": "BLOB_CONNECTION_STRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2022-05-01').keys[0].value)]"
            },
            {
              "name": "BLOB_CONTAINER_NAME",
              "value": "chatpdf"
            },
            {
              "name": "VERIFYPASS_URL",
              "value": "[concat('https://', variables('funcAppName'), '.azurewebsites.net/api/VerifyPassword?code=', listkeys(concat(resourceId('Microsoft.Web/sites', variables('funcAppName')), '/host/default'), '2018-11-01').functionKeys.default)]"
            },
            {
              "name": "INDEXMANAGEMENT_URL",
              "value": "[concat('https://', variables('funcAppName'), '.azurewebsites.net/api/IndexManagement?code=', listkeys(concat(resourceId('Microsoft.Web/sites', variables('funcAppName')), '/host/default'), '2018-11-01').functionKeys.default)]"
            },
            {
              "name": "CHAT_URL",
              "value": "[concat('https://', variables('funcAppName'), '.azurewebsites.net/api/ChatGpt?code=', listkeys(concat(resourceId('Microsoft.Web/sites', variables('funcAppName')), '/host/default'), '2018-11-01').functionKeys.default)]"
            },
            {
              "name": "CHATSTREAM_URL",
              "value": "[concat('https://', variables('funcAppName'), '.azurewebsites.net/api/ChatGptStream?code=', listkeys(concat(resourceId('Microsoft.Web/sites', variables('funcAppName')), '/host/default'), '2018-11-01').functionKeys.default)]"
            },
            {
              "name": "CHATGPT_URL",
              "value": "[concat('https://', variables('funcAppName'), '.azurewebsites.net/api/OpenChatGpt?code=', listkeys(concat(resourceId('Microsoft.Web/sites', variables('funcAppName')), '/host/default'), '2018-11-01').functionKeys.default)]"
            },
            {
              "name": "DOCGENERATOR_URL",
              "value": "[concat('https://', variables('funcAppName'), '.azurewebsites.net/api/DocGenerator?code=', listkeys(concat(resourceId('Microsoft.Web/sites', variables('funcAppName')), '/host/default'), '2018-11-01').functionKeys.default)]"
            },
            {
              "name": "QA_URL",
              "value": "[concat('https://', variables('funcAppName'), '.azurewebsites.net/api/QuestionAnswering?code=', listkeys(concat(resourceId('Microsoft.Web/sites', variables('funcAppName')), '/host/default'), '2018-11-01').functionKeys.default)]"
            },
            {
              "name": "SPEECH_REGION",
              "value": "[parameters('location')]"
            },
            {
              "name": "SPEECH_KEY",
              "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', variables('speechSvcName')), '2022-12-01').key1]"
            },
            {
              "name": "SEARCHKEY",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('searchSvcName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "SEARCHSERVICE",
              "value": "[variables('searchSvcName')]"
            },
            {
              "name": "KBINDEXNAME",
              "value": "aoaikb"
            },
            {
              "name": "COSMOSENDPOINT",
              "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbName')), '2022-08-15').documentEndpoint]"
            },
            {
              "name": "COSMOSKEY",
              "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbName')), '2022-08-15').primaryMasterKey]"
            },
            {
              "name": "COSMOSDATABASE",
              "value": "[variables('cosmosDb')]"
            },
            {
              "name": "COSMOSCONTAINER",
              "value": "[variables('cosmosContainer')]"
            },
            {
              "name": "OpenAiChat",
              "value": "[parameters('gptModelName')]"
            },
            {
              "name": "OpenAiChat16k",
              "value": "[parameters('gpt16kModelName')]"
            },
            {
              "name": "OpenAiEmbedding",
              "value": "[parameters('embeddingModelName')]"
            },
            {
              "name": "OpenAiEndPoint",
              "value": "[concat('https://', variables('aoaiSvcName'), '.openai.azure.com/')]"
            },
            {
              "name": "OpenAiKey",
              "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', variables('aoaiSvcName')), '2022-12-01').key1]"
            },
            {
              "name": "OpenAiApiKey",
              "value": "Dummy"
            },
            {
              "name": "OpenAiVersion",
              "value": "[parameters('openAiApiVersion')]"
            },
            {
              "name": "PineconeEnv",
              "value": "env"
            },
            {
              "name": "PineconeIndex",
              "value": "index"
            },
            {
              "name": "PineconeKey",
              "value": "key"
            },
            {
              "name": "RedisAddress",
              "value": "http://localhost"
            },
            {
              "name": "RedisPassword",
              "value": "Password"
            },
            {
              "name": "RedisPort",
              "value": "6379"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-01-01",
      "name": "[variables('funcAppName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('aspName'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('aoaiSvcName'))]",
        "[resourceId('Microsoft.Bing/accounts', variables('bingsvcName'))]",
        "[resourceId('Microsoft.Search/searchServices', variables('searchSvcName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('funcStorageName'))]"
      ],
      "kind": "functionapp,linux,container",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('aspName'))]",
        "enabled": true,
        "hostNameSslStates": [
            {
                "name": "[concat(variables('funcAppName'), '.azurewebsites.net')]",
                "sslState": "Disabled",
                "hostType": "Standard"
            },
            {
                "name": "[concat(variables('funcAppName'), '.scm.azurewebsites.net')]",
                "sslState": "Disabled",
                "hostType": "Repository"
            }
        ],
        "reserved": true,
        "siteConfig": {
          "linuxFxVersion": "DOCKER|ghcr.io/akshata29/entaoai-python:latest",
          "alwaysOn": true,
          "functionAppScaleLimit": 0,
          "minimumElasticInstanceCount": 0,
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightName')), '2020-02-02').InstrumentationKey]"
            },
            {
              "name": "AzureWebJobsFeatureFlags",
              "value": "EnableWorkerIndexing"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('funcStorageName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('funcStorageName')), '2022-05-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('funcStorageName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('funcStorageName')), '2022-05-01').keys[0].value)]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "python"
            },
            {
              "name": "BingUrl",
              "value": "https://api.bing.microsoft.com/v7.0/search"
            },
            {
              "name": "BingKey",
              "value": "[listKeys(resourceId('Microsoft.Bing/accounts', variables('bingsvcName')), '2020-06-10').key1]"
            },
            {
              "name": "UploadPassword",
              "value": "[parameters('uploadPassword')]"
            },
            {
              "name": "AdminPassword",
              "value": "[parameters('adminPassword')]"
            },
            {
              "name": "MaxTokens",
              "value": "500"
            },
            {
              "name": "OpenAiChat",
              "value": "[parameters('gptModelName')]"
            },
            {
              "name": "OpenAiChat16k",
              "value": "[parameters('gpt16kModelName')]"
            },
            {
              "name": "OpenAiDocContainer",
              "value": "chatpdf"
            },
            {
              "name": "OpenAiDocStorConnString",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2022-05-01').keys[0].value)]"
            },
            {
              "name": "OpenAiDocStorKey",
              "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2022-05-01').keys[0].value]"
            },
            {
              "name": "OpenAiDocStorName",
              "value": "[variables('storageName')]"
            },
            {
              "name": "OpenAiEmbedding",
              "value": "[parameters('embeddingModelName')]"
            },
            {
              "name": "FormRecognizerEndPoint",
              "value": "[concat('https://', variables('frSvcName'), '.cognitiveservices.azure.com/')]"
            },
            {
              "name": "FormRecognizerKey",
              "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', variables('frSvcName')), '2022-12-01').key1]"
            },
            {
              "name": "OpenAiEndPoint",
              "value": "[concat('https://', variables('aoaiSvcName'), '.openai.azure.com/')]"
            },
            {
              "name": "OpenAiKey",
              "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', variables('aoaiSvcName')), '2022-12-01').key1]"
            },
            {
              "name": "OpenAiApiKey",
              "value": "Dummy"
            },
            {
              "name": "OpenAiVersion",
              "value": "[parameters('openAiApiVersion')]"
            },
            {
              "name": "PineconeEnv",
              "value": "env"
            },
            {
              "name": "PineconeKey",
              "value": "key"
            },
            {
              "name": "RedisAddress",
              "value": "http://localhost"
            },
            {
              "name": "RedisPassword",
              "value": "Password"
            },
            {
              "name": "RedisPort",
              "value": "6379"
            },
            {
              "name": "SearchKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('searchSvcName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "SearchService",
              "value": "[variables('searchSvcName')]"
            },
            {
              "name": "Temperature",
              "value": "0.3"
            },
            {
              "name": "VsIndexName",
              "value": "dummy"
            },
            {
              "name": "CosmosEndpoint",
              "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbName')), '2022-08-15').documentEndpoint]"
            },
            {
              "name": "CosmosKey",
              "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbName')), '2022-08-15').primaryMasterKey]"
            },
            {
              "name": "CosmosDatabase",
              "value": "[variables('cosmosDb')]"
            },
            {
              "name": "CosmosContainer",
              "value": "[variables('cosmosContainer')]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('funcAppName'))]"
            },
            {
              "name": "KbIndexName",
              "value": "aoaikb"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2022-09-01",
      "name": "[concat(variables('storageName'), '/default/azure-webjobs-hosts')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
      ],
      "properties": {
        "immutableStorageWithVersioning": {
          "enabled": false
        },
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2022-09-01",
      "name": "[concat(variables('storageName'), '/default/azure-webjobs-secrets')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
      ],
      "properties": {
        "immutableStorageWithVersioning": {
          "enabled": false
        },
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2022-09-01",
      "name": "[concat(variables('storageName'), '/default/chatpdf')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
      ],
      "properties": {
        "immutableStorageWithVersioning": {
          "enabled": false
        },
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    }
  ]
}
